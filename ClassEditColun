*&---------------------------------------------------------------------*
*&       Class LCL_ZTREINAMENTO_ALV012
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS LCL_ZTREINAMENTO_ALV014 IMPLEMENTATION.

" Seleção de dados Simples
  METHOD BUSCA_DADOS.

    SELECT CPF
           NOME
           IDADE
           TRABALHO
           SALARIO
           CIDADE
           ESTADO
    FROM ZTREINAMENTO_09
    INTO TABLE ME->MT_ZTREINAMENTO_09
    WHERE CPF      IN S_CPF.


  ENDMETHOD.

  METHOD MONTA_SAIDA_1.

    FIELD-SYMBOLS: <FS_SAIDA> TYPE ZTREINAMENTO_09S.

    CLEAR: GT_SAIDA[].

    LOOP AT ME->MT_ZTREINAMENTO_09 INTO LS_ZTREINAMENTO_09.

      APPEND INITIAL LINE TO GT_SAIDA ASSIGNING <FS_SAIDA>.

      <FS_SAIDA>-CPF      = LS_ZTREINAMENTO_09-CPF.
      <FS_SAIDA>-NOME     = LS_ZTREINAMENTO_09-NOME.
      <FS_SAIDA>-IDADE    = LS_ZTREINAMENTO_09-IDADE.
      <FS_SAIDA>-TRABALHO = LS_ZTREINAMENTO_09-TRABALHO.
      <FS_SAIDA>-SALARIO  = LS_ZTREINAMENTO_09-SALARIO.
      <FS_SAIDA>-CIDADE   = LS_ZTREINAMENTO_09-CIDADE.
      <FS_SAIDA>-ESTADO   = LS_ZTREINAMENTO_09-ESTADO.

    ENDLOOP.

  ENDMETHOD.

  METHOD IMPRIMIR_LIST.

    DATA: VL_FILENAME TYPE STRING.

    CLEAR: GT_TEMP[].

    LOOP AT GT_SAIDA INTO LS_ZTREINAMENTO_09_DOWN.

      CALL FUNCTION 'CONVERSION_EXIT_CPFBR_OUTPUT' "Funcao de mascara de CPF para sair formatado no CSV.
        EXPORTING
          INPUT  = LS_ZTREINAMENTO_09_DOWN-CPF
        IMPORTING
          OUTPUT = LS_TEMP-CPF.

      LS_TEMP-NOME     = LS_ZTREINAMENTO_09_DOWN-NOME.
      LS_TEMP-IDADE    = LS_ZTREINAMENTO_09_DOWN-IDADE.
      LS_TEMP-TRABALHO = LS_ZTREINAMENTO_09_DOWN-TRABALHO.

" Formatando o Salario com ponto e virgula
      WRITE LS_ZTREINAMENTO_09_DOWN-SALARIO TO LS_TEMP-SALARIO.
      
" Removendo o espaço contido no campo
      CONDENSE LS_TEMP-SALARIO.

      LS_TEMP-CIDADE = LS_ZTREINAMENTO_09_DOWN-CIDADE.
      LS_TEMP-ESTADO = LS_ZTREINAMENTO_09_DOWN-ESTADO.

      APPEND LS_TEMP TO GT_TEMP.
      CLEAR: LS_TEMP.

      CLEAR: LS_ZTREINAMENTO_09_DOWN.

    ENDLOOP.
    CALL FUNCTION 'SAP_CONVERT_TO_CSV_FORMAT' " Funcao para Coneverter o Arquivo de entrada para um tipo "DATA: GT_ARQ      TYPE TRUXS_T_TEXT_DATA."
      TABLES
        I_TAB_SAP_DATA       = GT_TEMP
      CHANGING
        I_TAB_CONVERTED_DATA = GT_ARQ
      EXCEPTIONS
        CONVERSION_FAILED    = 1
        OTHERS               = 2.

    CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG " Funcao para abrir a tela de dialogo para selecionar o local para salvar
      EXPORTING
        WINDOW_TITLE      = 'Select File'
        DEFAULT_FILENAME  = ''
        INITIAL_DIRECTORY = 'C:\Users\AdopTI\Desktop\Testes'
        MULTISELECTION    = ' '  "No multiple selection
      CHANGING
        FILE_TABLE        = IT_TABEMP
        RC                = GD_SUBRCEMP.


    READ TABLE IT_TABEMP INTO DATA(LS_TABEMP) INDEX 1. 
    IF SY-SUBRC IS INITIAL.
      VL_FILENAME = LS_TABEMP-FILENAME && '.csv'.
    ENDIF.

    CALL FUNCTION 'GUI_DOWNLOAD' " Funcao para fazer o download realmente
      EXPORTING
        FILENAME                = VL_FILENAME
        FILETYPE                = 'ASC'
      TABLES
        DATA_TAB                = GT_ARQ
      EXCEPTIONS
        FILE_WRITE_ERROR        = 1
        NO_BATCH                = 2
        GUI_REFUSE_FILETRANSFER = 3
        INVALID_TYPE            = 4
        NO_AUTHORITY            = 5
        UNKNOWN_ERROR           = 6
        HEADER_NOT_ALLOWED      = 7
        SEPARATOR_NOT_ALLOWED   = 8
        FILESIZE_NOT_ALLOWED    = 9
        HEADER_TOO_LONG         = 10
        DP_ERROR_CREATE         = 11
        DP_ERROR_SEND           = 12
        DP_ERROR_WRITE          = 13
        UNKNOWN_DP_ERROR        = 14
        ACCESS_DENIED           = 15
        DP_OUT_OF_MEMORY        = 16
        DISK_FULL               = 17
        DP_TIMEOUT              = 18
        FILE_NOT_FOUND          = 19
        DATAPROVIDER_EXCEPTION  = 20
        CONTROL_FLUSH_ERROR     = 21
        OTHERS                  = 22.

  ENDMETHOD.

ENDCLASS.                    "LCL_ZTREINAMENTO_ALV014

*----------------------------------------------------------------------*
*       CLASS CL_ALV IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS LCL_ALV IMPLEMENTATION.

  METHOD CREATE_OBJECTS.
    "Cria o GRID
    CREATE OBJECT G_GRID
      EXPORTING
        I_PARENT = CL_GUI_CONTAINER=>DEFAULT_SCREEN. "Habilita a utilizacao da tela toda para o ALV

  ENDMETHOD.                    "create_objects

  METHOD DEFINE_LAYOUT.

    ME->MS_LAYOUT-SEL_MODE   = 'A'.
    ME->MS_LAYOUT-NO_ROWMARK = ABAP_FALSE.
    ME->MS_LAYOUT-ZEBRA      = ABAP_TRUE.
    ME->MS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.
    ME->MS_LAYOUT-NO_TOOLBAR = ABAP_FALSE.
    ME->MS_LAYOUT-STYLEFNAME = 'CELL_STYLE'.

  ENDMETHOD.                    "define_layout

  METHOD CREATE_FIELDCAT.

    FIELD-SYMBOLS: <FS_FIELDCAT> TYPE LVC_S_FCAT.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME       = 'ZTREINAMENTO_09S'"Estrutura do ALV
      CHANGING
        CT_FIELDCAT            = ME->MT_FIELDCAT[]
      EXCEPTIONS
        INCONSISTENT_INTERFACE = 0
        PROGRAM_ERROR          = 0
        OTHERS                 = 0.

    LOOP AT ME->MT_FIELDCAT ASSIGNING <FS_FIELDCAT>.

      CASE <FS_FIELDCAT>-FIELDNAME.
        WHEN 'CPF'.
          <FS_FIELDCAT>-EDIT_MASK = '___.___.___-__'.
          <FS_FIELDCAT>-REPTEXT   = 'CPF'.
          <FS_FIELDCAT>-SCRTEXT_L = 'CPF'.
          <FS_FIELDCAT>-SCRTEXT_M = 'CPF'.
        WHEN 'SALARIO'.
          <FS_FIELDCAT>-EDIT = 'X'."Habilita edicao na coluna
      ENDCASE.
    ENDLOOP.

  ENDMETHOD. "create_fieldcat

  METHOD EXCLUDE_TB_FUNCTIONS.

    FIELD-SYMBOLS: <FS_EXCLUDE> TYPE UI_FUNC.

    CLEAR: ME->MT_EXCLUDE[].

    "Copiar linha
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.

    "Deletar linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.

    "Adicionar linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.

    "Inserir nova linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.

    "Mover linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.

    "Atualizar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_REFRESH.

    "Recortar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.

    "Copiar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.

    "Colar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_MB_PASTE.

    "Colar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.

    "Colar nova linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.

    "Desfazer
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.

    "Checar entrada
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_CHECK.

    "Detalhes
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_DETAIL.

    "Gr�fico
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_GRAPH.

    "Informa��o
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_INFO.

  ENDMETHOD.                    "exclude_tb_functions

  METHOD DISPLAY.

    CALL METHOD G_GRID->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_SAVE               = 'A'
        IS_LAYOUT            = ME->MS_LAYOUT
        IS_VARIANT           = ME->MS_VARIANT
        IT_TOOLBAR_EXCLUDING = ME->MT_EXCLUDE
        I_BYPASSING_BUFFER   = ABAP_TRUE
      CHANGING
        IT_SORT              = ME->MT_SORT[]
        IT_FIELDCATALOG      = ME->MT_FIELDCAT[]
        IT_OUTTAB            = GT_SAIDA[].

  ENDMETHOD.                    "display

  METHOD CREATE_ALV.

    CREATE_OBJECTS( ).

    DEFINE_LAYOUT( ).

    CREATE_FIELDCAT( ).

    EXCLUDE_TB_FUNCTIONS( ).

    DISPLAY( ).

  ENDMETHOD.                    "create_alv

  METHOD SET_EVENTS.

    CREATE OBJECT EVENT_RECEIVER.
    SET HANDLER EVENT_RECEIVER->HANDLE_USER_COMMAND  FOR G_GRID.
    SET HANDLER EVENT_RECEIVER->HANDLE_TOOLBAR       FOR G_GRID.

    CALL METHOD G_GRID->SET_TOOLBAR_INTERACTIVE.

    CALL METHOD G_GRID->CHECK_CHANGED_DATA.

* Usar para disparar eventos que dever�o ser tratados no DATA_CHANGED
    CALL METHOD G_GRID->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
      EXCEPTIONS
        ERROR      = 1
        OTHERS     = 2.

  ENDMETHOD.  "set_events

  METHOD REFRESH.

*    CALL METHOD G_GRID->REFRESH_TABLE_DISPLAY
*      EXPORTING
*        I_SOFT_REFRESH = ABAP_TRUE.

  ENDMETHOD.


ENDCLASS.                 "lcl_alv IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS CL_EVENT_RECEIVER IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS LCL_EVENT_RECEIVER IMPLEMENTATION.

  METHOD HANDLE_TOOLBAR.
    DATA: LS_TOOLBAR  TYPE STB_BUTTON.

* append a separator to normal toolbar
    CLEAR LS_TOOLBAR.
    MOVE 3 TO LS_TOOLBAR-BUTN_TYPE.
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.

* Bot�o IMPRIMIR
    READ TABLE E_OBJECT->MT_TOOLBAR TRANSPORTING NO FIELDS WITH KEY FUNCTION = 'IMPRIMIR'.
    IF SY-SUBRC IS NOT INITIAL.
      CLEAR LS_TOOLBAR.
      MOVE 'IMPRIMIR'      TO LS_TOOLBAR-FUNCTION.
      MOVE  ICON_PRINT     TO LS_TOOLBAR-ICON.          "table ICON
      MOVE 'Imprimir'(111) TO LS_TOOLBAR-QUICKINFO.
      MOVE 'Imprimir'(112) TO LS_TOOLBAR-TEXT.
      MOVE ' '             TO LS_TOOLBAR-DISABLED.
      APPEND LS_TOOLBAR    TO E_OBJECT->MT_TOOLBAR.
    ENDIF.

  ENDMETHOD."handle_toolbar

  METHOD HANDLE_USER_COMMAND.

    CASE E_UCOMM.
      WHEN 'IMPRIMIR'.

        GR_ZTREINAMENTO_ALV014->IMPRIMIR_LIST( ).
*      WHEN 'REFRESH'  .
*        GR_ZTREINAMENTO_ALV014->BUSCA_DADOS( ).
*        GR_ZTREINAMENTO_ALV014->MONTA_SAIDA_1( ).
*
*        GR_ALV->REFRESH( ).
    ENDCASE.

  ENDMETHOD. "handle_user_command

  METHOD HANDLE_DATA_CHANGE_FINISH.

  ENDMETHOD. "handle_data_changE_finish

  METHOD HANDLE_PRINT_TOP_OF_PAGE.

  ENDMETHOD. "handle_print_top_of_page

  METHOD HANDLE_TOP_OF_PAGE.

  ENDMETHOD. "handle_top_of_page

ENDCLASS.                    "lcl_event_receiver IMPLEMENTATION
